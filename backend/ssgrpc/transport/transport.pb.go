// Code generated by protoc-gen-go.
// source: transport.proto
// DO NOT EDIT!

/*
Package transport is a generated protocol buffer package.

It is generated from these files:
	transport.proto

It has these top-level messages:
	Broadcast
	Roomcast
	Result
*/
package transport

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DataType int32

const (
	DataType_STR  DataType = 0
	DataType_BIN  DataType = 1
	DataType_JSON DataType = 2
)

var DataType_name = map[int32]string{
	0: "STR",
	1: "BIN",
	2: "JSON",
}
var DataType_value = map[string]int32{
	"STR":  0,
	"BIN":  1,
	"JSON": 2,
}

func (x DataType) String() string {
	return proto.EnumName(DataType_name, int32(x))
}
func (DataType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Broadcast struct {
	// unix nano timestamp
	Timestamp uint64   `protobuf:"fixed64,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Event     string   `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
	Data      []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	DataType  DataType `protobuf:"varint,4,opt,name=dataType,enum=transport.DataType" json:"dataType,omitempty"`
}

func (m *Broadcast) Reset()                    { *m = Broadcast{} }
func (m *Broadcast) String() string            { return proto.CompactTextString(m) }
func (*Broadcast) ProtoMessage()               {}
func (*Broadcast) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Broadcast) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Broadcast) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *Broadcast) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Broadcast) GetDataType() DataType {
	if m != nil {
		return m.DataType
	}
	return DataType_STR
}

type Roomcast struct {
	// unix nano timestamp
	Timestamp uint64   `protobuf:"fixed64,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Room      string   `protobuf:"bytes,2,opt,name=room" json:"room,omitempty"`
	Event     string   `protobuf:"bytes,3,opt,name=event" json:"event,omitempty"`
	Data      []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	DataType  DataType `protobuf:"varint,5,opt,name=dataType,enum=transport.DataType" json:"dataType,omitempty"`
}

func (m *Roomcast) Reset()                    { *m = Roomcast{} }
func (m *Roomcast) String() string            { return proto.CompactTextString(m) }
func (*Roomcast) ProtoMessage()               {}
func (*Roomcast) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Roomcast) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Roomcast) GetRoom() string {
	if m != nil {
		return m.Room
	}
	return ""
}

func (m *Roomcast) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *Roomcast) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Roomcast) GetDataType() DataType {
	if m != nil {
		return m.DataType
	}
	return DataType_STR
}

type Result struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	//
	// should be the original unix nano timestamp sent by the client
	// useful for calculating round trip time
	Timestamp uint64 `protobuf:"fixed64,2,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Result) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Result) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Broadcast)(nil), "transport.Broadcast")
	proto.RegisterType((*Roomcast)(nil), "transport.Roomcast")
	proto.RegisterType((*Result)(nil), "transport.Result")
	proto.RegisterEnum("transport.DataType", DataType_name, DataType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Propagate service

type PropagateClient interface {
	DoBroadcast(ctx context.Context, in *Broadcast, opts ...grpc.CallOption) (*Result, error)
	DoRoomcast(ctx context.Context, in *Roomcast, opts ...grpc.CallOption) (*Result, error)
}

type propagateClient struct {
	cc *grpc.ClientConn
}

func NewPropagateClient(cc *grpc.ClientConn) PropagateClient {
	return &propagateClient{cc}
}

func (c *propagateClient) DoBroadcast(ctx context.Context, in *Broadcast, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := grpc.Invoke(ctx, "/transport.Propagate/DoBroadcast", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *propagateClient) DoRoomcast(ctx context.Context, in *Roomcast, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := grpc.Invoke(ctx, "/transport.Propagate/DoRoomcast", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Propagate service

type PropagateServer interface {
	DoBroadcast(context.Context, *Broadcast) (*Result, error)
	DoRoomcast(context.Context, *Roomcast) (*Result, error)
}

func RegisterPropagateServer(s *grpc.Server, srv PropagateServer) {
	s.RegisterService(&_Propagate_serviceDesc, srv)
}

func _Propagate_DoBroadcast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Broadcast)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PropagateServer).DoBroadcast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Propagate/DoBroadcast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PropagateServer).DoBroadcast(ctx, req.(*Broadcast))
	}
	return interceptor(ctx, in, info, handler)
}

func _Propagate_DoRoomcast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Roomcast)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PropagateServer).DoRoomcast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Propagate/DoRoomcast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PropagateServer).DoRoomcast(ctx, req.(*Roomcast))
	}
	return interceptor(ctx, in, info, handler)
}

var _Propagate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.Propagate",
	HandlerType: (*PropagateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoBroadcast",
			Handler:    _Propagate_DoBroadcast_Handler,
		},
		{
			MethodName: "DoRoomcast",
			Handler:    _Propagate_DoRoomcast_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transport.proto",
}

func init() { proto.RegisterFile("transport.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0xd2, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x07, 0x70, 0xb7, 0x49, 0xd3, 0x64, 0x14, 0x8d, 0x63, 0x0f, 0x41, 0x3c, 0x84, 0x1e, 0x24,
	0x78, 0xa8, 0x50, 0xc5, 0xb3, 0x94, 0x5c, 0xf4, 0x50, 0x65, 0xdb, 0x17, 0x58, 0xd3, 0x45, 0x04,
	0xd3, 0x09, 0xbb, 0x53, 0xa1, 0x77, 0xdf, 0xc1, 0xd7, 0x95, 0xc6, 0x7c, 0x29, 0x15, 0x7a, 0xca,
	0xcc, 0x3f, 0xbb, 0xcb, 0x6f, 0x3f, 0xe0, 0x84, 0x8d, 0x5a, 0xd9, 0x82, 0x0c, 0x8f, 0x0b, 0x43,
	0x4c, 0x18, 0x34, 0xc1, 0xe8, 0x53, 0x40, 0x30, 0x35, 0xa4, 0x96, 0x99, 0xb2, 0x8c, 0x17, 0x10,
	0xf0, 0x5b, 0xae, 0x2d, 0xab, 0xbc, 0x88, 0x44, 0x2c, 0x12, 0x4f, 0xb6, 0x01, 0x0e, 0xa1, 0xaf,
	0x3f, 0xf4, 0x8a, 0xa3, 0x5e, 0x2c, 0x92, 0x40, 0xfe, 0x34, 0x88, 0xe0, 0x2e, 0x15, 0xab, 0xc8,
	0x89, 0x45, 0x72, 0x24, 0xcb, 0x1a, 0xaf, 0xc1, 0xdf, 0x7e, 0x17, 0x9b, 0x42, 0x47, 0x6e, 0x2c,
	0x92, 0xe3, 0xc9, 0xd9, 0xb8, 0x45, 0xa4, 0xd5, 0x2f, 0xd9, 0x0c, 0x1a, 0x7d, 0x09, 0xf0, 0x25,
	0x51, 0xbe, 0x87, 0x02, 0xc1, 0x35, 0x44, 0x79, 0x85, 0x28, 0xeb, 0x56, 0xe6, 0xec, 0x92, 0xb9,
	0xff, 0xc8, 0xfa, 0xfb, 0xc8, 0xee, 0xc1, 0x93, 0xda, 0xae, 0xdf, 0x19, 0x23, 0x18, 0xd8, 0x75,
	0x96, 0x69, 0x6b, 0x4b, 0x94, 0x2f, 0xeb, 0xf6, 0x37, 0xb8, 0xf7, 0x07, 0x7c, 0x75, 0x09, 0x7e,
	0xbd, 0x2e, 0x0e, 0xc0, 0x99, 0x2f, 0x64, 0x78, 0xb0, 0x2d, 0xa6, 0x0f, 0xb3, 0x50, 0xa0, 0x0f,
	0xee, 0xe3, 0xfc, 0x69, 0x16, 0xf6, 0x26, 0x1b, 0x08, 0x9e, 0x0d, 0x15, 0xea, 0x55, 0xb1, 0xc6,
	0x3b, 0x38, 0x4c, 0xa9, 0xbd, 0x98, 0x61, 0x07, 0xd9, 0xa4, 0xe7, 0xa7, 0x9d, 0xb4, 0x42, 0xde,
	0x02, 0xa4, 0xd4, 0x9c, 0x64, 0x77, 0x6f, 0x75, 0xb8, 0x63, 0xd6, 0x8b, 0x57, 0xbe, 0x8b, 0x9b,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x8f, 0xc3, 0x46, 0x2a, 0x02, 0x00, 0x00,
}
